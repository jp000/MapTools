# -------------------------------------------------------------------
# This is the default mkgmap style file for applying rules on
# OSM relations.  Usually you will set tags on the
# elements that make up the relation, and the tags will be
# processed by the rules defined in the "points" or "lines" files.
#
# Any line prefaced with # is a comment and will not be applied.
# Each line is a rule, of the generalised format:
#  OSM_tag(s)_to_match  [Garmin_type_code resolution]
# See http://wiki.openstreetmap.org/wiki/Mkgmap/help/style_rules
# and http://wiki.openstreetmap.org/wiki/Mkgmap/help/Custom_styles
# for more information.

include "name"; 

# Names of administrative boundaries.
# We could want to sort the relations in ascending order of admin_level
# and alphabetically by name first.
# Currently, the matching relations will be processed and the names
# appended to the boundary lines in an arbitrary order.

(type=boundary | type=multipolygon) & boundary=administrative & name=*
{ apply
  {
    set mkgmap:boundary_name='$(mkgmap:boundary_name)/${name}' | '${name}';
  }
}

# Public transportation routes.
# We could want to sort the matching relations by ref first.

(type=route & (route=bus|route=trolleybus|route=ferry|route=tram)) & (ref=* | name=*)
#(type=route & (route=bus|route=trolleybus|route=ferry|route=tram)) & (ref=*)
{
  add ref='${name}'; # if ref is missing, use name
  apply {
	set route_bus='$(route_bus),${ref|not-contained:,:route_bus}' | '$(route_bus)' | '${ref}';
    set mkgmap:relref='${ref}';
    apply role=passengers {
      set route_bus='$(route_bus),${mkgmap:relref}' | '${mkgmap:relref}';
    }
    delete mkgmap:relref;
  }
}

#type=route & (route=hiking|route=foot) & (ref=* | name=*)
type=route & (route=hiking|route=foot)
{
  add ref='${name}'; # if ref is missing, use name
  apply {
	set route_hik='$(route_hik),${ref|not-contained:,:route_hik}' | '$(route_hik)' | '${ref}';
    set mkgmap:relref='${ref}';
    delete mkgmap:relref;
    #echotags 'route_hik';

  }
}

type=route & (route=bicycle|route=mtb) & (ref=* | name=*)
#type=route & (route=bicycle|route=mtb)
{
  add ref='${name}'; # if ref is missing, use name
  apply {
	set route_bik='$(route_bik),${ref|not-contained:,:route_bik}' | '$(route_bik)' | '${ref}';
    set mkgmap:relref='${ref}';
    delete mkgmap:relref;
	#echotags 'route_bik';
  }
}

#any highway
type=route & route=road & historic!=yes & (ref=* | name=*)
{
    add ref='${name}'; # if ref is missing, use name
    apply {
        add ref='${ref}';
		set name='$(name) ${ref}';
        #echotags 'any highway';
    }
}
