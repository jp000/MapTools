#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.9.3 on Sat Jun 29 13:47:44 2019
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((540, 450))
        
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        self.ID_OPEN = wx.NewId()
        self.ID_SAVE = wx.NewId()
        self.ID_EXIT = wx.NewId()
        self.mnuFile = wx.Menu()
        self.mnuFile.Append(self.ID_OPEN, "Open", "Open a file to get data")
        self.Bind(wx.EVT_MENU, self.onFileOpen, id=self.ID_OPEN)
        self.mnuFile.Append(self.ID_SAVE, "Save", "Open a file to save the data")
        self.Bind(wx.EVT_MENU, self.onFileSave, id=self.ID_SAVE)
        self.mnuFile.AppendSeparator()
        self.mnuFile.Append(self.ID_EXIT, "Exit", "Exit the application")
        self.Bind(wx.EVT_MENU, self.onFileExit, id=self.ID_EXIT)
        self.frame_menubar.Append(self.mnuFile, "File")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        self.Statusbar = self.CreateStatusBar(1)
        
        # Tool Bar
        self.Toolbar = wx.ToolBar(self, -1, style=wx.TB_DEFAULT_STYLE)
        self.SetToolBar(self.Toolbar)
        self.Toolbar.AddTool(self.ID_OPEN, "ToolOpen", self.ToolOpen, wx.NullBitmap, wx.ITEM_NORMAL, "Get data from file", "")
        self.Toolbar.AddTool(self.ID_SAVE, "ToolSave", self.ToolSave, wx.NullBitmap, wx.ITEM_NORMAL, "Save the data on file", "")
        # Tool Bar end
        self.ID_WIN = wx.NewId()
        self.text_ctrl_1 = wx.TextCtrl(self, self.ID_WIN, "", style=wx.HSCROLL | wx.TE_MULTILINE)
        self.ID_BTN3 = wx.NewId()
        self.button_3 = wx.Button(self, self.ID_BTN3, "3")
        self.ID_BTN2 = wx.NewId()
        self.button_2 = wx.Button(self, self.ID_BTN2, "2")
        self.ID_BTN1 = wx.NewId()
        self.button_1 = wx.Button(self, self.ID_BTN1, "1")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onUserAction, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.onUserAction, self.button_2)
        self.Bind(wx.EVT_BUTTON, self.onUserAction, self.button_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(self.MainIcon)
        self.SetIcon(_icon)
        self.Statusbar.SetStatusWidths([-1])

        # statusbar fields
        Statusbar_fields = ["frame_statusbar"]
        for i in range(len(Statusbar_fields)):
            self.Statusbar.SetStatusText(Statusbar_fields[i], i)
        self.Toolbar.Realize()
        self.text_ctrl_1.SetFont(wx.Font(10, wx.FONTFAMILY_MODERN, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Source Code Pro"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        self.ID_LABEL = wx.NewId()
        label_1 = wx.StaticText(self, self.ID_LABEL, "label_1")
        sizer_2.Add(label_1, 0, 0, 0)
        sizer_2.Add(self.text_ctrl_1, 1, wx.ALIGN_CENTER | wx.EXPAND, 0)
        sizer_3.Add(self.button_3, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 10)
        sizer_3.Add(self.button_2, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 10)
        sizer_3.Add(self.button_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 10)
        sizer_2.Add(sizer_3, 0, wx.ALIGN_RIGHT | wx.ALL, 5)
        sizer_1.Add(sizer_2, 1, wx.EXPAND | wx.FIXED_MINSIZE, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def onFileOpen(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'onFileOpen' not implemented!")
        event.Skip()

    def onFileSave(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'onFileSave' not implemented!")
        event.Skip()

    def onFileExit(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'onFileExit' not implemented!")
        event.Skip()

    def onUserAction(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'onUserAction' not implemented!")
        event.Skip()

# end of class MyFrame

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
